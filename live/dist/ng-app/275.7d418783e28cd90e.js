"use strict";(self.webpackChunkng_app=self.webpackChunkng_app||[]).push([[275],{5275:(u,i,a)=>{a.r(i),a.d(i,{DebugComponent:()=>l});var e=a(3953);let r=(()=>{class t{constructor(){}ngOnInit(){}static \u0275fac=function(s){return new(s||t)};static \u0275cmp=e.VBU({type:t,selectors:[["app-debug-explained"]],standalone:!0,features:[e.aNF],decls:24,vars:0,template:function(s,o){1&s&&(e.j41(0,"div")(1,"h3"),e.EFF(2,"How it works"),e.k0s(),e.j41(3,"p"),e.EFF(4," Dnn APIs require certain headers in http-requests. The most commen ist a "),e.j41(5,"code"),e.EFF(6,"RequestVerificationToken"),e.k0s(),e.EFF(7," which is also known as the "),e.j41(8,"code"),e.EFF(9,"Anti Forgery Token"),e.k0s(),e.EFF(10,". Additional headers like "),e.j41(11,"code"),e.EFF(12,"ModuleId"),e.k0s(),e.EFF(13," or "),e.j41(14,"code"),e.EFF(15,"TabID"),e.k0s(),e.EFF(16," provide context so the backend knows what system you are talking to. "),e.k0s(),e.j41(17,"p"),e.EFF(18," These headers are automatically added to your http-requests thanks to dnn-sxc-angular. There are two ways dnn-sxc-angular gets these values: "),e.k0s(),e.j41(19,"ol")(20,"li"),e.EFF(21,"using the attributes in the app-tag (faster, but harder to setup)"),e.k0s(),e.j41(22,"li"),e.EFF(23,"auto-detecting it from the HTML-DOM (slower, but just works)"),e.k0s()()())},encapsulation:2})}return t})();var c=a(8930);let l=(()=>{class t{context;constructor(n){this.context=n}static \u0275fac=function(s){return new(s||t)(e.rXU(c.ob))};static \u0275cmp=e.VBU({type:t,selectors:[["app-debug"]],standalone:!0,features:[e.aNF],decls:39,vars:5,template:function(s,o){1&s&&(e.j41(0,"h2"),e.EFF(1,"Debug DNN & 2sxc Parameters"),e.k0s(),e.j41(2,"p"),e.EFF(3,"This just shows the configuration currently in use."),e.k0s(),e.j41(4,"ol")(5,"li")(6,"strong"),e.EFF(7,"Edition"),e.k0s(),e.EFF(8),e.nrm(9,"br"),e.EFF(10," You would use this information for lazy-loading additional things from the correct build-folder (for example: if you needed to dynamically load some svg files). "),e.k0s(),e.j41(11,"li")(12,"strong"),e.EFF(13,"ApiEdition"),e.k0s(),e.EFF(14),e.nrm(15,"br"),e.EFF(16," This is automatically used in the 2sxc API calls, so that you can run a staging copy of your code without affecting public users or for A/B testing. "),e.k0s(),e.j41(17,"li")(18,"strong"),e.EFF(19,"Context information for HTTP"),e.k0s(),e.nrm(20,"br"),e.EFF(21," These are automatically used in most http calls, because they tell the server what page the user is on. "),e.j41(22,"ol")(23,"li")(24,"strong"),e.EFF(25,"Page ID / Tab ID"),e.k0s(),e.EFF(26),e.k0s(),e.j41(27,"li")(28,"strong"),e.EFF(29,"Sxc ID / Module ID"),e.k0s(),e.EFF(30),e.k0s(),e.j41(31,"li")(32,"strong"),e.EFF(33,"Anti Forgery Token"),e.k0s(),e.EFF(34),e.nrm(35,"br"),e.EFF(36," This is automatically added to most http calls, for increased security. It changes with every page you load. "),e.k0s()()()(),e.nrm(37,"hr")(38,"app-debug-explained")),2&s&&(e.R7$(8),e.SpI(" : ",o.context.edition,""),e.R7$(6),e.SpI(" : ",o.context.apiEdition," "),e.R7$(12),e.SpI(" : ",o.context.$2sxc.env.page()," "),e.R7$(4),e.SpI(" : ",o.context.sxc.id," "),e.R7$(4),e.SpI(" : ",o.context.$2sxc.env.rvt()," "))},dependencies:[r],encapsulation:2})}return t})()}}]);